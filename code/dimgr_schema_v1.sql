DROP TABLE TUPLE_CONSTRAINTS CASCADE CONSTRAINTS PURGE;


DROP TABLE TUPLES CASCADE CONSTRAINTS PURGE;


DROP TABLE INTER_TABLE_CONSTRAINTS CASCADE CONSTRAINTS PURGE;


DROP TABLE COLUMNS CASCADE CONSTRAINTS PURGE;


DROP TABLE TABLE_CONSTRAINTS CASCADE CONSTRAINTS PURGE;


DROP TABLE CONSTRAINT_TYPES CASCADE CONSTRAINTS PURGE;


DROP TABLE TABLES CASCADE CONSTRAINTS PURGE;


CREATE TABLE COLUMNS
(
    OWNER  VARCHAR2(30)  NOT NULL ,
    TABLE_NAME  VARCHAR2(30)  NOT NULL ,
    COLUMN_ID  INTEGER  NOT NULL ,
    COLUMN_NAME  VARCHAR2(30)  NOT NULL ,
    DATA_TYPE  CHAR(18)  NOT NULL ,
    DATA_LENGTH  CHAR(18)  NULL ,
    DATA_PRECISION  CHAR(18)  NULL ,
    DATA_SCALE  CHAR(18)  NULL ,
    COLUMN_DESC  VARCHAR2(100)  NULL ,
    COLUMN_COMMENT  VARCHAR2(500)  NULL ,
    NULLABLE_default_  VARCHAR2(1)  NOT NULL ,
    CONSTRAINT_DESC  VARCHAR2(500)  NULL ,
    CONSTRAINT_CHECK_CONDITION  VARCHAR2(500)  NULL ,
    CONSTRAINT_VALIDATION_QRY  VARCHAR2(500)  NULL ,
    CONSTRAINT_NAME  VARCHAR2(30)  NULL 
);


COMMENT ON COLUMN COLUMNS.DATA_LENGTH IS 'Length of the column (in bytes)';


CREATE  UNIQUE INDEX XPKCOLUMNS ON COLUMNS
(
    OWNER  ASC,
    TABLE_NAME  ASC,
    COLUMN_NAME  ASC
);


ALTER TABLE COLUMNS
    ADD  PRIMARY KEY (OWNER,TABLE_NAME,COLUMN_NAME);


CREATE TABLE CONSTRAINT_TYPES
(
    TYPE  VARCHAR2(30)  NOT NULL ,
    TYPE_DESC  VARCHAR2(200)  NULL 
);


CREATE  UNIQUE INDEX XPKCONSTRAINT_TYPES ON CONSTRAINT_TYPES
(
    TYPE  ASC
);


ALTER TABLE CONSTRAINT_TYPES
    ADD  PRIMARY KEY (TYPE);


CREATE TABLE INTER_TABLE_CONSTRAINTS
(
    CONSTRAINT_NAME  VARCHAR2(30)  NOT NULL ,
    CONSTRAINT_DESC  VARCHAR2(500)  NULL ,
    CONSTRAINT_VALIDATION_QRY  VARCHAR2(500)  NULL ,
    TYPE  VARCHAR2(30)  NULL 
);


CREATE  UNIQUE INDEX XPKINTER_TABLE_CONSTRAINTS ON INTER_TABLE_CONSTRAINTS
(
    CONSTRAINT_NAME  ASC
);


ALTER TABLE INTER_TABLE_CONSTRAINTS
    ADD  PRIMARY KEY (CONSTRAINT_NAME);


CREATE TABLE TABLE_CONSTRAINTS
(
    OWNER  VARCHAR2(30)  NOT NULL ,
    TABLE_NAME  VARCHAR2(30)  NOT NULL ,
    CONSTRAINT_NAME  VARCHAR2(30)  NOT NULL ,
    CONSTRAINT_DESC  VARCHAR2(500)  NULL ,
    CONSTRAINT_VALIDATION_QRY  VARCHAR2(500)  NULL ,
    TYPE  VARCHAR2(30)  NULL 
);


CREATE  UNIQUE INDEX XPKTABLE_CONSTRAINTS ON TABLE_CONSTRAINTS
(
    OWNER  ASC,
    TABLE_NAME  ASC,
    CONSTRAINT_NAME  ASC
);


ALTER TABLE TABLE_CONSTRAINTS
    ADD  PRIMARY KEY (OWNER,TABLE_NAME,CONSTRAINT_NAME);


CREATE TABLE TABLES
(
    OWNER  VARCHAR2(30)  NOT NULL ,
    TABLE_NAME  VARCHAR2(30)  NOT NULL ,
    TABLE_DESC  CHAR(18)  NULL ,
    TABLE_COMMENT  VARCHAR2(30)  NULL ,
    TABLE_TYPE  VARCHAR2(30)  NULL 
);


COMMENT ON COLUMN TABLES.TABLE_TYPE IS 'FACT, DIMENSION, ACTIVITY,SNAPSHOT';


CREATE  UNIQUE INDEX XPKTABLES ON TABLES
(
    OWNER  ASC,
    TABLE_NAME  ASC
);


ALTER TABLE TABLES
    ADD  PRIMARY KEY (OWNER,TABLE_NAME);


CREATE TABLE TUPLE_CONSTRAINTS
(
    OWNER  VARCHAR2(30)  NOT NULL ,
    TABLE_NAME  VARCHAR2(30)  NOT NULL ,
    CONSTRAINT_NAME  VARCHAR2(30)  NOT NULL ,
    CONSTRAINT_DESC  VARCHAR2(500)  NULL ,
    CONSTRAINT_CHECK_CONDITION  VARCHAR2(500)  NULL ,
    CONSTRAINT_VALIDATION_QRY  VARCHAR2(500)  NULL 
);


CREATE  UNIQUE INDEX XPKTUPLE_CONSTRAINTS ON TUPLE_CONSTRAINTS
(
    OWNER  ASC,
    TABLE_NAME  ASC,
    CONSTRAINT_NAME  ASC
);


ALTER TABLE TUPLE_CONSTRAINTS
    ADD  PRIMARY KEY (OWNER,TABLE_NAME,CONSTRAINT_NAME);


CREATE TABLE TUPLES
(
    OWNER  VARCHAR2(30)  NOT NULL ,
    TABLE_NAME  VARCHAR2(30)  NOT NULL ,
    TUPLE_DESC  VARCHAR2(250)  NULL 
);


COMMENT ON COLUMN TUPLES.TUPLE_DESC IS 'what each tuple represents in english';


CREATE  UNIQUE INDEX XPKTUPLES ON TUPLES
(
    OWNER  ASC,
    TABLE_NAME  ASC
);


ALTER TABLE TUPLES
    ADD  PRIMARY KEY (OWNER,TABLE_NAME);


ALTER TABLE COLUMNS
    ADD ( FOREIGN KEY (OWNER,TABLE_NAME) REFERENCES TABLES(OWNER,TABLE_NAME));


ALTER TABLE INTER_TABLE_CONSTRAINTS
    ADD ( FOREIGN KEY (TYPE) REFERENCES CONSTRAINT_TYPES(TYPE) ON DELETE SET NULL);


ALTER TABLE TABLE_CONSTRAINTS
    ADD ( FOREIGN KEY (OWNER,TABLE_NAME) REFERENCES TABLES(OWNER,TABLE_NAME));


ALTER TABLE TABLE_CONSTRAINTS
    ADD ( FOREIGN KEY (TYPE) REFERENCES CONSTRAINT_TYPES(TYPE) ON DELETE SET NULL);


ALTER TABLE TUPLE_CONSTRAINTS
    ADD ( FOREIGN KEY (OWNER,TABLE_NAME) REFERENCES TUPLES(OWNER,TABLE_NAME));


ALTER TABLE TUPLES
    ADD ( FOREIGN KEY (OWNER,TABLE_NAME) REFERENCES TABLES(OWNER,TABLE_NAME));


